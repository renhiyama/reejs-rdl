/* esm.sh - esbuild bundle(@remix-run/web-form-data@3.0.4) node production */
var l=class{constructor(t){if(this._entries=[],Object.defineProperty(this,"_entries",{enumerable:!1}),h(t))for(let e of t.elements)if(b(e))for(let s of e.options)s.selected&&this.append(e.name,s.value);else g(e)&&(e.checked||!["radio","checkbox"].includes(e.type))&&e.name&&this.append(e.name,e.value)}get[Symbol.toStringTag](){return"FormData"}append(t,e=o(new TypeError("FormData.append: requires at least 2 arguments")),s){this._entries.push([t,p(e,s)])}delete(t=o(new TypeError("FormData.delete: requires string argument"))){let e=this._entries,s=0;for(;s<e.length;){let[n]=e[s];n===t?e.splice(s,1):s++}}get(t=o(new TypeError("FormData.get: requires string argument"))){for(let[e,s]of this._entries)if(e===t)return s;return null}getAll(t=o(new TypeError("FormData.getAll: requires string argument"))){let e=[];for(let[s,n]of this._entries)s===t&&e.push(n);return e}has(t=o(new TypeError("FormData.has: requires string argument"))){for(let[e]of this._entries)if(e===t)return!0;return!1}set(t,e=o(new TypeError("FormData.set: requires at least 2 arguments")),s){let n=0,{_entries:i}=this,u=p(e,s),a=!1;for(;n<i.length;){let c=i[n];c[0]===t?a?i.splice(n,1):(a=!0,c[1]=u,n++):n++}a||i.push([t,u])}entries(){return this._entries.values()}*keys(){for(let[t]of this._entries)yield t}*values(){for(let[t,e]of this._entries)yield e}[Symbol.iterator](){return this._entries.values()}forEach(t,e){for(let[s,n]of this._entries)t.call(e,n,s,this)}},h=r=>Object.prototype.toString.call(r)==="[object HTMLFormElement]",p=(r,t)=>{if(m(r))return t!=null?new f([r],t,r):r;if(y(r))return new f([r],t??"blob");if(t!=null&&t!="")throw new TypeError("filename is only supported when value is Blob or File");return`${r}`},m=r=>Object.prototype.toString.call(r)==="[object File]"&&typeof r.name=="string",y=r=>Object.prototype.toString.call(r)==="[object Blob]",f=class{constructor([t],e,{lastModified:s=Date.now()}={}){this.blob=t,this.name=e,this.lastModified=s}get webkitRelativePath(){return""}get size(){return this.blob.size}get type(){return this.blob.type}slice(t,e,s){return this.blob.slice(t,e,s)}stream(){return this.blob.stream()}text(){return this.blob.text()}arrayBuffer(){return this.blob.arrayBuffer()}get[Symbol.toStringTag](){return"File"}},o=r=>{throw r};function b(r){return r.tagName==="SELECT"}function g(r){return r.tagName==="INPUT"||r.tagName==="TEXTAREA"}var E=l;export{E as FormData};
//# sourceMappingURL=web-form-data.mjs.map